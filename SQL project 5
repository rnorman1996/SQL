--In this project, I am creating a table based on Spotify data and coming up with multiple different questions to write queries to find out different information with the data imported from a spreadsheet.

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

--What is the average energy level of songs?

SELECT AVG(energy) AS avg_energy_level
FROM Spotifydata;

--Who are the top 10 most popular artists?

SELECT artist_name, AVG(popularity)
FROM Spotifydata
GROUP BY artist_name
ORDER BY AVG(popularity) DESC
LIMIT 10;

--Which artist has the most tracks?

SELECT artist_name, COUNT(track_id) AS tracks
FROM Spotifydata
GROUP BY artist_name
HAVING COUNT(track_id) = 
    (SELECT MAX(count) 
    FROM 
        (SELECT COUNT(track_id) 
        as count FROM Spotifydata GROUP BY artist_name));
--*Note: Upon running this query, I discovered that there were two artists that had the most tracks so I opted not to use a limit clause, but rather a subquery to show all MAX results.


--What is the most common time signature among the songs?

SELECT time_signature, COUNT(time_signature) AS count
FROM Spotifydata
GROUP BY time_signature
ORDER BY count DESC
LIMIT 1;

--Which artist has the highest average valence score for their songs?

SELECT artist_name, AVG(valence)
FROM Spotifydata
GROUP BY artist_name
ORDER BY AVG(valence) DESC
LIMIT 1;

--Which are the top 3 tracks that are the most danceable but not loud?

SELECT track_name, loudness, danceability 
FROM Spotifydata
ORDER BY danceability DESC, loudness ASC
LIMIT 3;

--What is the average danceability for the 10 most popular songs?

SELECT AVG(danceability) AS avg_danceability, popularity
FROM Spotifydata
WHERE track_id IN (
  SELECT track_id
  FROM Spotifydata
  ORDER BY popularity DESC
  LIMIT 10); 

--Tag all artists with an average popularity of 90 or above as a "Top Star".

WITH tempTable AS (
    SELECT AVG(popularity) AS popularity, artist_name
    FROM Spotifydata
    GROUP BY artist_name)
    
SELECT artist_name, popularity, 'Top Star' AS tag
FROM tempTable
WHERE popularity >=90
;


